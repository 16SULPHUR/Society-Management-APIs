export class ActivityBlock extends Block {
    /**
     * @private
     * @type {{ String: { activateCallback: Function; deactivateCallback: Function } }}
     */
    private static _activityRegistry;
    historyTracked: boolean;
    init$: {
        /** @private */
        '*currentActivity': string;
        '*currentActivityParams': {};
        '*history': never[];
        '*historyBack': null;
        '*closeModal': () => void;
        '*blocksRegistry': Set<Block>;
        '*eventEmitter': import("../blocks/UploadCtxProvider/EventEmitter.js").EventEmitter | null;
    };
    _debouncedHistoryFlush: (() => void) & {
        cancel: () => void;
    };
    /** @private */
    private _deactivate;
    /** @private */
    private _activate;
    /** @private */
    private _historyFlush;
    /** @private */
    private _isActivityRegistered;
    get isActivityActive(): boolean | undefined;
    get couldOpenActivity(): boolean;
    /**
     * TODO: remove name argument
     *
     * @param {String} name
     * @param {Object} [options]
     * @param {() => void} [options.onActivate]
     * @param {() => void} [options.onDeactivate]
     */
    registerActivity(name: string, options?: {
        onActivate?: (() => void) | undefined;
        onDeactivate?: (() => void) | undefined;
    } | undefined): void;
    unregisterActivity(): void;
    get activityKey(): string;
    get activityParams(): any;
    /** @type {String} */
    get initActivity(): string;
    /** @type {String} */
    get doneActivity(): string;
    historyBack(): void;
    ___ACTIVITY_IS_ACTIVE___: boolean | undefined;
}
export namespace ActivityBlock {
    type activities = string;
    let activities: Readonly<{
        START_FROM: "start-from";
        CAMERA: "camera";
        DRAW: "draw";
        UPLOAD_LIST: "upload-list";
        URL: "url";
        CONFIRMATION: "confirmation";
        CLOUD_IMG_EDIT: "cloud-image-edit";
        EXTERNAL: "external";
        DETAILS: "details";
    }>;
}
import { Block } from './Block.js';
//# sourceMappingURL=ActivityBlock.d.ts.map