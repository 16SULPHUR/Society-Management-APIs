/**
 * @typedef {Object} RefMap
 * @property {import('./EditableCanvas.js').EditableCanvas} parent
 * @property {HTMLCanvasElement} canvas
 * @property {CanvasRenderingContext2D} canvCtx
 * @property {SVGElement} svg
 * @property {SVGElement} svgGroup
 * @property {SVGImageElement} svgImg
 */
export class EditableCanvas extends Block {
    init$: any;
    /** @type {HTMLCanvasElement} */
    canvas: HTMLCanvasElement | undefined;
    canvCtx: CanvasRenderingContext2D | null | undefined;
    /** @param {HTMLImageElement} img */
    setImage(img: HTMLImageElement): void;
    /** @param {File} imgFile */
    setImageFile(imgFile: File): void;
    /** @param {String} url */
    setImageUrl(url: string): void;
    clear(): void;
}
export namespace EditableCanvas {
    let template: string;
}
export type RefMap = {
    parent: import('./EditableCanvas.js').EditableCanvas;
    canvas: HTMLCanvasElement;
    canvCtx: CanvasRenderingContext2D;
    svg: SVGElement;
    svgGroup: SVGElement;
    svgImg: SVGImageElement;
};
import { Block } from '../../abstract/Block.js';
//# sourceMappingURL=EditableCanvas.d.ts.map